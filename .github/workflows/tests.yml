name: Run Tests # Nombre del Action

on: #Disparador
  pull_request: #Cuando se abre/actualiza un Pull Request(PR)
    branches: [ main ] #Solo cuando el PR apunte a main
  push: #Cuando se hace un push directo a main
    branches: [ main ]

concurrency: #Esto evita ejecuciones solapadas
  group: ${{ github.workflow }}-${{ github.ref }} # RunTest/main
  cancel-in-progress: true #Cancela la que llego primero, le da prioridad a la entrante

jobs:
  tests: #Job Principal
    name: Django pytest #Nombre del job
    runs-on: ubuntu-latest # Runner github
    timeout-minutes: 3 #
    env:
      PYTHONPATH: ${{ github.workspace }}/itec2025 
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1

    steps:
      - name: Checkout # Clona el repo al runner
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Installed Dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

      - name: Run tests (Pytest)
        run: pytest -q # Corre tests en modo quiet falle el job
